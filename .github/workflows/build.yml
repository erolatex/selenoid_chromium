name: Build and Push Chromium

on:
  workflow_dispatch:

jobs:
  check_chromium_version:
    runs-on: ubuntu-latest
    steps:
      - name: Set up environment
        run: |
          mkdir -p .cache
          echo "Set up environment complete."

      - name: Restore last Chromium version from cache
        uses: actions/cache@v3
        with:
          path: .cache
          key: chromium-version-cache

      - name: Check Chromium Version
        run: |
          apt-cache madison chromium | grep xtradeb/apps | awk '{print $3}' > .cache/current_chromium_version.txt

      - name: Extract Short Version
        run: |
          awk -F '.' '{print $1 "." $2}' .cache/current_chromium_version.txt > .cache/short_chromium_version.txt

      - name: Compare with the last version
        run: |
          if [ ! -f .cache/last_chromium_version.txt ]; then
            echo "No previous version found. Proceeding with build."
            echo "build_required=true" >> $GITHUB_ENV
          elif ! cmp --silent .cache/current_chromium_version.txt .cache/last_chromium_version.txt; then
            echo "New Chromium version detected. Proceeding with build."
            echo "build_required=true" >> $GITHUB_ENV
          else
            echo "Chromium version is up to date. Skipping build."
            echo "build_required=false" >> $GITHUB_ENV
          fi

      - name: Clear existing cache (optional)
        if: env.build_required == 'true'
        run: rm -rf .cache/current_chromium_version.txt

      - name: Cache the current Chromium version
        uses: actions/cache@v3
        with:
          path: .cache
          key: chromium-version-cache
          restore-keys: chromium-version-cache

  build_and_push:
    needs: check_chromium_version
    runs-on: ubuntu-latest
    if: env.build_required == 'true'
    steps:
      - name: Clone Dockerfile Repository
        uses: actions/checkout@v2
        with:
          repository: erolatex/selenoid_chromium_dockerfile
          path: dockerfile_repo

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and Push Docker Image
        run: |
          cd dockerfile_repo
          docker buildx build --no-cache --platform linux/amd64,linux/arm64 \
            -t erolatex/selenoid_chromium:$(cat ../../.cache/short_chromium_version.txt) \
            -t erolatex/selenoid_chromium:latest \
            --push .
        
      - name: Post Log in to Docker Hub
        run: echo "Docker image build and push completed."

      - name: Save the current Chromium version
        run: cp .cache/current_chromium_version.txt .cache/last_chromium_version.txt
