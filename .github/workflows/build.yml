name: Build and Push Docker Image

on:
  workflow_dispatch:

jobs:
  check_chromium_version:
    runs-on: ubuntu-22.04
    outputs:
      build_required: ${{ steps.check_image.outputs.build_required }}
      short_version: ${{ steps.get_chromium_version.outputs.short_version }}
    steps:
      # Set up the environment and add PPA for Chromium
      - name: Set up environment
        run: |
          sudo apt-get update
          sudo apt-get install -y software-properties-common jq
          sudo add-apt-repository -y ppa:xtradeb/apps
          sudo apt-get update

      # Check Chromium Version
      - name: Check Chromium Version
        id: get_chromium_version
        run: |
          apt-cache madison chromium | grep xtradeb/apps | awk '{print $3}' > current_chromium_version.txt
          SHORT_VERSION=$(awk -F '.' '{print $1 "." $2}' current_chromium_version.txt)
          echo "short_version=${SHORT_VERSION}" >> $GITHUB_ENV
          echo "::set-output name=short_version::${SHORT_VERSION}"

      # Check if Docker image with this version exists on Docker Hub
      - name: Check Image on Docker Hub
        id: check_image
        run: |
          IMAGE_TAG="${{ steps.get_chromium_version.outputs.short_version }}"
          RESPONSE=$(curl -s -f -lSL "https://hub.docker.com/v2/repositories/erolatex/selenoid_chromium/tags/${IMAGE_TAG}/" || echo "Not Found")
          if [[ "$RESPONSE" == "Not Found" ]]; then
            echo "Image not found on Docker Hub. Build required."
            echo "::set-output name=build_required::true"
          else
            echo "Image exists on Docker Hub. No build required."
            echo "::set-output name=build_required::false"
          fi

  build_and_push:
    needs: check_chromium_version
    runs-on: ubuntu-latest
    if: needs.check_chromium_version.outputs.build_required == 'true'
    environment: DOCKERHUB  # Specify the environment here
    steps:
      # Clone the repository containing the Dockerfile
      - name: Clone Dockerfile Repository
        uses: actions/checkout@v2
        with:
          repository: erolatex/images  # Replace with your Dockerfile repository
          path: dockerfile_repo

      # Set up Docker Buildx for cross-platform builds
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Log in to Docker Hub using environment secrets
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}  # Corrected reference
          password: ${{ secrets.DOCKER_PASSWORD }}  # Corrected reference

      # Build and Push Docker Image
      - name: Build and Push Docker Image
        run: |
          cd dockerfile_repo/static/chromium  # Navigate to the directory containing the Dockerfile
          docker buildx build --no-cache \
            --build-arg BASE_IMAGE_TAG=1.0.1 \
            --platform linux/amd64,linux/arm64 \
            -t erolatex/selenoid_chromium:${{ needs.check_chromium_version.outputs.short_version }} \
            -t erolatex/selenoid_chromium:latest \
            --push .

      # Log out from Docker Hub
      - name: Log out from Docker Hub
        run: docker logout
